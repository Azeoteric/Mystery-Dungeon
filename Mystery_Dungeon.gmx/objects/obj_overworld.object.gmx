<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes the overworld for the player.
//Just gonna say makes a shape. Probably really ineffecient and stuff but hey it works...
//yea it does probaly best to leave this alone since it doesn't take to much time to render... 
room_width = (CELL_WIDTH / 16)  * 720;
room_height = (CELL_HEIGHT / 16) * 720;
global.level = 0;
wall_set = true;
//Set Grid Width
width = room_width div CELL_WIDTH;
height = room_height div CELL_HEIGHT;


// Create the grid
grid = ds_grid_create(width, height);

//Fill the grid with the void
ds_grid_set_region(grid, 0, 0, width - 1, height - 1, VOID);
scr_tile(width, height, grid);

//Randomized the world
randomize();

//Create the controller in middle parts of the grid
var cx = width div 2;
var cy = height div 2;
cy -= 5;
cx += 10;
scr_make_room(cx, cy, true);

cy -= 5;
scr_make_room(cx, cy, true);

cx += 5;
scr_make_room(cx, cy, true);

cy -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cy += 5;
scr_make_room(cx, cy, true);

cy += 5;
cx += 5;

scr_make_room(cx, cy, true); 

cy += 5;
scr_make_room(cx, cy, true); 

tempX = cx * CELL_WIDTH + CELL_WIDTH div 2;
tempY = cy * CELL_HEIGHT + CELL_HEIGHT div 2;


cy += 5;
scr_make_room(cx, cy, true);

cy += 5;
scr_make_room(cx, cy, true);

cx += 5;
scr_make_room(cx, cy, true);

cx -= 10;
scr_make_room(cx, cy, true);
cx += 5;
cy += 5;
scr_make_room(cx, cy, true);

cx += 5;
scr_make_room(cx, cy, true);

cx -= 10;
scr_make_room(cx, cy, true);

cy -= 15;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cy -= 5;
scr_make_room(cx, cy, true);

cy -= 5;
scr_make_room(cx, cy, true);

cx += 5;
scr_make_room(cx, cy, true);

cy -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cy += 5;
scr_make_room(cx, cy, true);

cy += 5;
cx += 5;

scr_make_room(cx, cy, true); 

cy += 5;
scr_make_room(cx, cy, true); 
cy += 5;
scr_make_room(cx, cy, true);

cy += 5;
scr_make_room(cx, cy, true);

cx += 5;
scr_make_room(cx, cy, true);

cx -= 10;
scr_make_room(cx, cy, true);
cx += 5;
cy += 5;
scr_make_room(cx, cy, true);

cx += 5;
scr_make_room(cx, cy, true);

cx -= 10;
scr_make_room(cx, cy, true);

cy -= 15;
scr_make_room(cx, cy, true);

cx += 30;
scr_make_room(cx, cy, true);
grid[# cx, cy] = FLOOR;
instance_create(tempX, tempY, obj_player);
scr_tile(width, height, grid);
tile_add(bg_portal, 0, 0, CELL_WIDTH, CELL_HEIGHT, cx * CELL_WIDTH, cy * CELL_HEIGHT, 0); 
grid[# cx, cy] = PORTAL;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
