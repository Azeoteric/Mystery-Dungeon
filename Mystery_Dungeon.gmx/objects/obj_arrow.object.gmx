<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up arrow
depth = -20002;
is_left = true;
is_right = false;
is_top = true;
is_bottom = false;
pos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delete text
if(instance_exists(obj_floor_text)){
   with(obj_floor_text) {
      instance_destroy();
   }
}

if(instance_exists(obj_level_select_text)){
   with(obj_level_select_text) {
      instance_destroy();
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moves arrow (floor)
if(instance_exists(obj_floor_text)) { 
   scr_get_input();
   move = key_right + key_left;
   if (move &lt; 0 &amp;&amp; is_left) {
      x -= 105;
      is_left = false;
      is_right = true;
   
   }
   if (move &gt; 0 &amp;&amp; is_right) {
      x += 105;
      is_left = true;
      is_right = false;
   }
   
   if (key_act &amp;&amp; is_left) {
      global.is_game_running = true;
      instance_destroy();
   }
   
   if (key_act &amp;&amp; is_right) {
      global.is_game_running = false;
      with(obj_level_maker){
         event_user(0);
      }
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moves arrow (level select)
if(instance_exists(obj_level_select_text)) { 
   scr_get_input();

//Moves the arrow down
if (vmoveR &gt; 0 &amp;&amp; pos &lt; 2) {
   y += 28;
   pos++;    
}

//Moves the arrow up
if (vmoveR &lt; 0 &amp;&amp; pos &gt; 0) {
   y -= 28;
   pos--;    
} 
//Makes sure the the arrow doesn't enter blank space
//Goto to level
if(key_act){
switch(pos) {
    
    case 0:
             global.level = 1;
             break;
   
    case 1:
             global.level = 2;
             break;
   
    case 2:
             global.level = 3;
             break;
    
    default:
       global.is_game_running = true;
       instance_destroy();
       break;
   
   
   //if(is_bottom &amp;&amp; is_right) {
   //          global.level = 4;
   //}
  
      }  
   room_goto(rm_test2);
}
//Returns to the overworld
if(key_back) {
   global.is_game_running = true;
   instance_destroy();
   }
   
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
