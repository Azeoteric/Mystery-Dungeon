<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_squeep</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
scr_grid();
image_speed = 0.2;
hspd = 0;
vspd = 0;
DEFAULT_SPEED = 3;
CHARGE_SPEED = 10;
SLOW_SPEED = 4;
MOVE_SPEED = DEFAULT_SPEED;
hit_points = 3;
VISION_RADIUS = 512;
CHARGE_RADIUS = 512;
CHANGE_DIRECTION = 100;
change_timer = 0;
UP = 0;
DOWN = 1;
RIGHT = 2;
LEFT = 3;
attack_direction = DOWN;
unstick = DOWN;

/************************
 *    STATE VARABLES    *
*************************/
STATE_NORMAL = 0;
STATE_CHARGE = 1;
STATE_ATTACK = 2;
state = STATE_NORMAL;
CHARGE_DELAY = 32;
ATTACK_DURATION = 70;
charge_timer = 0;
attack_timer = 0;
COOLDOWN = 300;
cooldown_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gets state variables
//picks a direction every second

var same_x_y = (abs(obj_player.x - x) &lt; 20 || abs(obj_player.y - y) &lt; 20);

if (attack_timer &lt;= 0 &amp;&amp; state == STATE_ATTACK) {
    state = STATE_NORMAL;
    MOVE_SPEED = DEFAULT_SPEED;
    change_timer = 30;
}

if ((same_x_y) &amp;&amp; (state == STATE_NORMAL)
        &amp;&amp; scr_boss_sees_player(CHARGE_RADIUS)) {
    state = STATE_CHARGE;
    charge_timer = CHARGE_DELAY;
    if (abs(obj_player.x - x) &lt; 20) {
        if (obj_player.y &lt; y) {
            attack_direction = UP;
        } else {
            attack_direction = DOWN;
        }
    }
    else if (abs(obj_player.y - y) &lt; 20) {
        if (obj_player.x &gt; x) {
            attack_direction = RIGHT;
        } else {
            attack_direction = LEFT;
        } 
    }
}

if (charge_timer == 0 &amp;&amp; state == STATE_CHARGE) {
    state = STATE_ATTACK;
    attack_timer = ATTACK_DURATION;
    MOVE_SPEED = CHARGE_SPEED;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handles state mechanics
switch (state) {
    case 0:
        if (change_timer == 0) {
            change_timer = CHANGE_DIRECTION; // CHANGE_DIRECTION = 100
            if (abs(obj_player.x - x) &gt;= abs(obj_player.y - y)) {
                hspd = sign(obj_player.x - x);
                vspd = 0;
            }
            else {
                hspd = 0;
                vspd = sign(obj_player.y - y);
            }
        }
        scr_move_enemy(hspd, vspd);
        change_timer--;
        break;
    case 1:
        hspd = 0;
        vspd = 0;
        charge_timer--;
        break;
    case 2:
            switch (attack_direction) {
                case UP:
                    if (!scr_move_enemy(0, -1)){
                        attack_timer = 0;
                    }
                    break;
                case DOWN:
                    if (!scr_move_enemy(0, 1)){
                        attack_timer = 0;
                    }
                    break;
                case RIGHT:
                    if (!scr_move_enemy(1, 0)){
                        attack_timer = 0;
                    }
                    break;
                case LEFT:
                    if (!scr_move_enemy(-1, 0)){
                        attack_timer = 0;
                    }
                    break;
            }
        attack_timer--;
        if (attack_timer == 40) {
            MOVE_SPEED = SLOW_SPEED;
        }
        break;
}
/*if (x == xprevious &amp;&amp; y == yprevious) {
    forfeitCounter++;
} else {
    forfeitCounter = 0;
}
if (forfeitCounter == 1) {
    unstick = attack_direction;
}
if (forfeitCounter == 40) {
    forfeitCounter = 0;
    switch (unstick) {
        case UP:
            y += 10;
            state = STATE_NORMAL;
            break;
        case DOWN:
            y -= 10;
            state = STATE_NORMAL;
            break;
        case RIGHT:
            state = STATE_NORMAL;
            x -= 10;        
            break;
        case LEFT:
            state = STATE_NORMAL;
            x += 10;
            break;    
    }
} */



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles damage

if(place_meeting(x, y, obj_arrow_projectile)) {
                   hit_points -= obj_player.attack;
}
if(hit_points &lt; 0) {
 instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
