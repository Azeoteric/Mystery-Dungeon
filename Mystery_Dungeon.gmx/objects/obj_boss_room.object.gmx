<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes Boss Room
room_width = (CELL_WIDTH / 16)  * 720;
room_height = (CELL_HEIGHT / 16) * 720;
wall_set = true;
boss_defeated = false;
//Set Grid Width
//global.level = 1;
width = room_width div CELL_WIDTH;
height = room_height div CELL_HEIGHT;


// Create the grid
grid = ds_grid_create(width, height);

// Make Path finding grid
grid_path = mp_grid_create(0, 0, width, height, CELL_WIDTH, CELL_HEIGHT);

//Fill the grid with the void
ds_grid_set_region(grid, 0, 0, width - 1, height - 1, VOID);
scr_tile(width, height, grid, grid_path);

//Randomized the world
randomize();

//Create the controller in random parts of the grid
var cx = width div 2;
var cy = height div 2;
scr_make_room(cx, cy, true);

cy += 5;
scr_make_room(cx, cy, true);

cx += 5;
cy -= 5;
scr_make_room(cx, cy, true);

cy -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cy += 5;
scr_make_room(cx, cy, true);

cy += 5;
cx += 5;
cy++;
repeat(10) {
 grid[# cx, cy] = FLOOR;
  cy++;
}   
scr_make_room(cx, cy, true); 
tempX = cx * CELL_WIDTH + CELL_WIDTH div 2;
tempY = cy * CELL_HEIGHT + CELL_HEIGHT div 2;

cx -= 5;
scr_make_room(cx, cy, true);

cx += 10;
scr_make_room(cx, cy, true);

cx = width div 2;
cy = height div 2

cx += 10;
cy -= 5;
scr_make_room(cx, cy, true);

cx -= 20;
scr_make_room(cx, cy, true);

cx = width div 2;
cy -= 5;
scr_make_room(cx, cy, true);

cx -= 5;
scr_make_room(cx, cy, true);

cx += 10
scr_make_room(cx, cy, true);

cx -= 5
cy -= 5; 
scr_make_room(cx, cy, true); 

cx += 10;
scr_make_room(cx, cy, true); 


cy = width div 2;
cy += 5;
scr_make_room(cx, cy, true); 

cx -= 20;
scr_make_room(cx, cy, true); 

cy -= 20;
scr_make_room(cx, cy, true); 

instance_create(tempX, tempY, obj_player);
cx += 10;
grid[# cx, cy] = FLOOR;
scr_tile(width, height, grid, grid_path);
px = cx;
py = cy;

switch(global.level){
case 1:
instance_create(room_width div 2, room_height div 2, obj_squeep_boss);
break;

case 2:
instance_create(room_width div 2, room_height div 2, obj_nacho_duck);
break;

case 3:
instance_create(room_width div 2, room_height div 2, obj_taco_boss);
break;

case 4:
instance_create(room_width div 2, room_height div 2, obj_nacho_duck);
instance_create(room_width div 2, room_height div 2, obj_squeep_boss);
break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawns the portal
if(boss_defeated) {
    event_user(0);
    
    switch(global.level) {
        case 1:
            if (scr_get_player_variable('beaten_level_1') == 0) {
                scr_set_player_variable('beaten_level_1', 1);
                scr_level_up();
            }
            break;
        case 2:
            if (scr_get_player_variable('beaten_level_2') == 0) {
                scr_set_player_variable('beaten_level_2', 1);
                scr_level_up();
            }
            break;
        case 3:
            if (scr_get_player_variable('beaten_level_3') == 0) {
                scr_set_player_variable('beaten_level_3', 1);
                scr_level_up();
            }
            break;
        case 4:
            if (scr_get_player_variable('beaten_level_4') == 0) {
                scr_set_player_variable('beaten_level_4', 1);
                scr_level_up();
            }
            break;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes the portal appear 
tile_add(bg_portal, 0, 0, CELL_WIDTH, CELL_HEIGHT, px * CELL_WIDTH, py * CELL_HEIGHT, 0); 
grid[# px, py] = PORTAL;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///calls User Event 0
//event_user(0);
boss_defeated = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
