<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sprinkle_red</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable Init
scr_grid();
xMove = 0;
yMove = 0;
depth = -16;
speedFactor = obj_player.bullet_speed;
xDirection = 0;
yDirection = 0;
image_speed = .5;
destroyTimer = 0;
switch(irandom(3)){
       case 0:
       sprite_index = spr_sprinkle_grn;
       break;
       
       case 1:
       sprite_index = spr_sprinkle_prpl;
       break;
       
       case 2:
       sprite_index = spr_sprinkle_red;
       break;
       
       default:
       sprite_index = spr_sprinkle_yllw;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Steady Movement of the Projectile
if (xMove == 0 || yMove == 0) {
    hspeed = xDirection * speedFactor + xMove;
    vspeed = yDirection * speedFactor + yMove;
}
else {
    hspeed = (xDirection * speedFactor + xMove) / sqrt(2);
    vspeed = (yDirection * speedFactor + yMove) / sqrt(2);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Deletion
if(place_meeting(x, y, obj_squeeb)){
                    instance_destroy();
}
//Destroys the projectile after it moves far enough.
if (abs(x) &gt; 10000 || abs(y) &gt; 10000)
{
    instance_destroy()
}

    var is_x_meeting = (grid[# bbox_right div CELL_WIDTH, bbox_top div CELL_HEIGHT] == WALL)  || 
                       (grid[# bbox_left div CELL_WIDTH, bbox_top div CELL_HEIGHT] == WALL)   ||
                       (grid[# bbox_right div CELL_WIDTH, bbox_top div CELL_HEIGHT] == WALL_MAPPED)  || 
                       (grid[# bbox_left div CELL_WIDTH, bbox_top div CELL_HEIGHT] == WALL_MAPPED);
    
                      
    var is_y_meeting = (grid[# bbox_left div CELL_WIDTH, bbox_bottom  div CELL_HEIGHT]  == WALL)  || 
                       (grid[# bbox_right div CELL_WIDTH, bbox_bottom div CELL_HEIGHT]  == WALL)  ||
                       (grid[# bbox_left div CELL_WIDTH, bbox_bottom  div CELL_HEIGHT]  == WALL_MAPPED)  || 
                       (grid[# bbox_right div CELL_WIDTH, bbox_bottom div CELL_HEIGHT]  == WALL_MAPPED);

if (is_x_meeting || is_y_meeting) {
   instance_destroy();
}

if(destroyTimer &lt; 75) {
    destroyTimer++;
}

else {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
