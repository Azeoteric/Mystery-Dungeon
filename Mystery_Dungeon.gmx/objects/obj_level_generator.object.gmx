<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the level

// Resize room
room_width = (CELL_WIDTH / 16) * 720;
room_height = (CELL_HEIGHT / 16) * 720;

// Set grid width and height
var width = room_width div CELL_WIDTH;
var height = room_height div CELL_HEIGHT;

// Initialize variables
    // Controller position variables
    var cx = width div 2;
    var cy = height div 2;
    
    // Number of rooms
    var NUMBER_OF_ROOMS = 5;
    var ROOM_COUNT = 0;
    
    // Length of current hallway
    var hallway_length = 0;
    
    // Node variables
    var nodeX = 0;
    var nodeY = 0;
    nodeLocations[100, 1] = 0;
    var nodeCount = 0;
    
// Create grid
grid = ds_grid_create(width, height);

// Fill void
ds_grid_set_region(grid, 0, 0, width - 1, height - 1, VOID);

// Generate random seed
randomize();

// Fill in starting room
var rm_height = irandom(4) + 4;
var rm_width = irandom(4) + 4;
ds_grid_set_region(grid, cx, cy, cx + rm_width, cy + rm_height, FLOOR);

// Set nodes on starting room
scr_generate_nodes_for_room(cx, cy, cx + rm_width, cy + rm_height, irandom(1) + 1, grid);

// Fill in grid
/*
while (ROOM_COUNT &lt; NUMBER_OF_ROOMs) {
    // create (i + 1)-th room
    
    
    // 
} */

// Add backgrounds
for (xx = 0; xx &lt; width - 1; xx++) {
    for (yy = 0; yy &lt; height - 1; yy++) {
        if (grid[# xx, yy] == FLOOR) {
            tile_add(bg_floor2, 0, 0, CELL_WIDTH, CELL_HEIGHT, xx * CELL_WIDTH, yy * CELL_HEIGHT, 0);
        }
        
        if (grid[# xx, yy] == NODE) {
            tile_add(bg_node, 0, 0, CELL_WIDTH, CELL_HEIGHT, xx * CELL_WIDTH, yy * CELL_HEIGHT, 0);
        }
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart room
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
